(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{725:function(t,s,a){"use strict";a.r(s);var n=a(81),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"redis之-管道-pipeline-和批量-batch操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis之-管道-pipeline-和批量-batch操作"}},[t._v("#")]),t._v(" Redis之 管道（PipeLine）和批量（Batch操作）")]),t._v(" "),s("h2",{attrs:{id:"管道-pipeline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管道-pipeline"}},[t._v("#")]),t._v(" 管道（PipeLine）")]),t._v(" "),s("blockquote",[s("p",[t._v("Redis 的 "),s("a",{attrs:{href:"https://redis.io/topics/pipelining",target:"_blank",rel:"noopener noreferrer"}},[t._v("管道 （pipelining）"),s("OutboundLink")],1),t._v("是用来打包多条无关命令批量执行，以减少多个命令分别执行带来的网络交互时间。在一些批量操作数据的场景，使用管道可以显著提升 Redis 的读写性能。")])]),t._v(" "),s("h3",{attrs:{id:"原理演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理演示"}},[t._v("#")]),t._v(" 原理演示")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007X8olVly1g8vcn6frwxj30hr09g412.jpg",alt:"原理演示"}})]),t._v(" "),s("h3",{attrs:{id:"使用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in NodeJS")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("key2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("key1")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("key2")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("p",[t._v("在批量操作（查询和写入）数据时，我们应尽量避免多次跟 Redis 的网络交互。这时，可以使用管道实现，也可以 Redis 内嵌 Lua 脚本实现。需要注意的是：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("管道只适用于无因果关联的多命令操作")]),t._v("，否则就需要借助 Lua 脚本实现批量操作。")]),t._v(" "),s("li",[t._v("在实际应用中，Redis 往往不可能是单机部署，如果想要在集群中使用管道，可以部署为一主多从架构，此时所有节点的数据都一致，随机选取节点使用管道即可。")])]),t._v(" "),s("h3",{attrs:{id:"与multi区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与multi区别"}},[t._v("#")]),t._v(" 与multi区别")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("pipeline")]),t._v("，将一系列命令打包发给redis服务端。如果只是为了一下执行多条redis命令，无需事物和原子性。")]),t._v(" "),s("li",[s("code",[t._v("multi")]),t._v("，相当于一个redis的transaction的。")]),t._v(" "),s("li",[s("code",[t._v("multi")]),t._v("具有原子性，"),s("code",[t._v("pipeline")]),t._v("不具有。在不需要事务的情况下，"),s("code",[t._v("pipeline")]),t._v("的性能10倍高于"),s("code",[t._v("multi")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[s("strong",[t._v("正确使用pipeline对性能的提升十分明显。")]),t._v("\n但是使用管道时 Redis 会缓存之前命令的结果，最后一并输出给终端，因此所打包的命令不宜太多，否则内存使用会很严重。")]),t._v(" "),s("p",[s("strong",[t._v("pipeline并未保证原子性。即同一个pipeline中的命令在redis-server被执行的顺序可以保证，但不保证其中不会穿插其余的客户端请求的命令。")])]),t._v(" "),s("h2",{attrs:{id:"batch-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#batch-操作"}},[t._v("#")]),t._v(" Batch 操作")]),t._v(" "),s("h3",{attrs:{id:"优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[t._v("#")]),t._v(" 优势")]),t._v(" "),s("ul",[s("li",[t._v("性能优异，因为是单条指令操作，因此性能略优于其他批量操作指令。")])]),t._v(" "),s("h3",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("批量命令不保证原子性，存在部分成功部分失败的情况，需要应用程序解析返回的结果并做相应处理。")]),t._v(" "),s("li",[t._v("批量命令在key数目巨大时存在RRT与key数目成比例放大的性能衰减，会导致单实例响应性能(RRT)严重下降。")])]),t._v(" "),s("h3",{attrs:{id:"相关具体命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关具体命令"}},[t._v("#")]),t._v(" 相关具体命令")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://redis.io/commands/mget",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("mget")]),t._v("(适用与string类型)"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://redis.io/commands/mset",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("mset")]),t._v("(适用于string类型)"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://redis.io/commands/hmget",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("hmget")]),t._v("(适用于hash类型)"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://redis.io/commands/hmset",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("hmset")]),t._v("(适用于hash类型)"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"其他操作方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他操作方法"}},[t._v("#")]),t._v(" 其他操作方法")]),t._v(" "),s("p",[t._v("随口一提一个小方法，批量执行多个"),s("code",[t._v("del")]),t._v("操作。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in NodeJs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);